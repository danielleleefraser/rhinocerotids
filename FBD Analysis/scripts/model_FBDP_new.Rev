speciation_rate ~ dnExponential(10)
extinction_rate ~ dnExponential(10)

moves.append( mvScale(speciation_rate, lambda=0.01, weight=1) )
moves.append( mvScale(speciation_rate, lambda=0.1,  weight=1) )
moves.append( mvScale(speciation_rate, lambda=1.0,  weight=1) )

moves.append( mvScale(extinction_rate, lambda=0.01, weight=1) )
moves.append( mvScale(extinction_rate, lambda=0.1,  weight=1) )
moves.append( mvScale(extinction_rate, lambda=1,    weight=1) )

diversification := speciation_rate - extinction_rate
turnover := extinction_rate/speciation_rate

rho <- 1.0

psi ~ dnExponential(10) 

moves.append( mvScale(psi, lambda=0.01, weight=1) )
moves.append( mvScale(psi, lambda=0.1,  weight=1) )
moves.append( mvScale(psi, lambda=1,    weight=1) )

origin_time ~ dnUnif(39.5, 50.0) # this is based on the Janis (1998) volume

moves.append( mvSlide(origin_time, delta=0.01, weight=5.0) )
moves.append( mvSlide(origin_time, delta=0.1,  weight=5.0) )
moves.append( mvSlide(origin_time, delta=1,    weight=5.0) ) 

fbd_tree ~ dnFBDP(origin=origin_time, lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=rho, taxa=taxa)

moves.append( mvFNPR(fbd_tree, weight=15.0) )
moves.append(mvCollapseExpandFossilBranch(fbd_tree, origin_time, weight=6.0, tuneTarget=1.0))

moves.append( mvNodeTimeSlideUniform(fbd_tree, weight=40.0) )
moves.append( mvRootTimeSlideUniform(fbd_tree, origin_time, weight=5.0) )

fossils = fbd_tree.getFossils()
for(i in 1:fossils.size())
{
    t[i] := tmrca(fbd_tree, clade(fossils[i]))

    a_i = fossils[i].getMinAge()
    b_i = fossils[i].getMaxAge()

    F[i] ~ dnUniform(t[i] - b_i, t[i] - a_i)
    F[i].clamp( 0 )
}

moves.append( mvFossilTimeSlideUniform(fbd_tree, origin_time, weight=5.0) )

num_samp_anc := fbd_tree.numSampledAncestors();

clade_extant = clade("Ceratotherium_simum","Dicerorhinus_sumatrensis", "Diceros_bicornis", "Rhinoceros_sondaicus", 
                      "Rhinoceros_unicornis")

age_extant := tmrca(fbd_tree, clade_extant)

age_Devon_rhino := tmrca(fbd_tree, clade("Devon_rhino"))

#pruned_tree := fnPruneTree(fbd_tree, prune=v(taxa[17],taxa[20]))